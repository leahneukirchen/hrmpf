name: Build hrmpf images

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Override version for images"
        required: false
        type: string
      archs:
        description: "Archs to build for"
        default: "x86_64 aarch64"
        required: false
        type: string
      platforms:
        description: "aarch64 platforms to include support for"
        default: "pinebookpro x13s"
        required: false
        type: string
      extra_args:
        description: "Extra arguments"
        default: ""
        required: false
        type: string
  push:
    tags:
      - 'hrmpf-*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  prepare:
    name: Prepare Environment
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.prep.outputs.version }}
      archs: ${{ steps.prep.outputs.archs }}
      extra_args: ${{ steps.prep.outputs.extra_args }}

    steps:
      - name: Prepare Environment
        id: prep
        run: |
          jsonify() {
            sed 's/\s\+/ /g' | jq -Rrc 'split(" ")'
          }

          TAG="${{ github.ref_name }}"
          if [ "${{ github.ref_type }}" = "tag" ] && [ "${TAG}" != "${TAG#hrmpf-}" ]; then
            # if a release, use defaults
            echo "version=${TAG#hrmpf-}" >> $GITHUB_OUTPUT
            echo "archs=$(echo "x86_64 aarch64" | jsonify)" >> $GITHUB_OUTPUT
            echo "extra_args=-P 'pinebookpro x13s'" >> $GITHUB_OUTPUT
          else
            # if manual
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
            echo "archs=$(echo "${{ inputs.archs }}" | xargs | jsonify)" >> $GITHUB_OUTPUT
            echo "extra_args=-P '${{ inputs.platforms }}' ${{ inputs.extra_args }}" >> $GITHUB_OUTPUT
          fi

  build-hrmpf:
    name: Build Hrmpf ISOs
    runs-on: ${{ startsWith(matrix.arch, 'aarch64') && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    needs: prepare

    strategy:
      matrix:
        arch: ${{ fromJson(needs.prepare.outputs.archs) }}

    container:
      image: 'ghcr.io/void-linux/void-mklive:20250227R1'
      options: --privileged
      volumes:
        - /dev:/dev
      env:
        PATH: '/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/usr/local/bin:/tmp/bin'
        VERSION: ${{ needs.prepare.outputs.version }}
        EXTRA_ARGS: ${{ needs.prepare.outputs.extra_args }}

    steps:
      - name: Prepare container
        shell: sh
        run: xbps-install -Syu xbps && xbps-install -yu

      - name: Clone and checkout
        uses: classabbyamp/treeless-checkout-action@v1

      - name: Build Hrmpf ISOs
        run: |
          ./mkhrmpf.sh -a "${{ matrix.arch }}"

      - name: Prepare artifacts for upload
        run: |
          mkdir -p distdir
          mv hrmpf*.iso distdir

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hrmpf-${{ matrix.arch }}-${{ needs.prepare.outputs.version }}
          path: |
            distdir/*
          if-no-files-found: error

  merge-artifacts:
    name: Combine artifacts
    runs-on: ubuntu-latest
    needs:
      - prepare
      - build-hrmpf

    container:
      image: 'ghcr.io/void-linux/void-mklive:20250227R1'
      env:
        PATH: '/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/usr/local/bin:/tmp/bin'

    steps:
      - name: Prepare container
        shell: sh
        run: xbps-install -Syu xbps && xbps-install -yu && xbps-install -yu mktorrent b3sum

      - name: Clone and checkout
        uses: classabbyamp/treeless-checkout-action@v1

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: distdir
          merge-multiple: true

      - name: Prepare artifacts for upload
        id: checksum
        run: |
          pushd distdir
          sha256sum --tag *.iso > checksums.txt
          b2sum --tag *.iso >> checksums.txt
          b3sum *.iso | sed -E 's/^([a-z0-9]+)\s+(.+)$/BLAKE3 (\2) = \1/' >> checksums.txt
          popd
          echo '```' > release-body.txt
          cat distdir/checksums.txt >> release-body.txt
          echo '```' >> release-body.txt

      - name: Create torrent
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd distdir
          for f in ./*.iso; do
            ../mktorrent.sh "$f"
          done

      - name: Upload artifacts
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: hrmpf-${{ env.VERSION }}
          path: |
            distdir/*
          if-no-files-found: error

      - name: Generate summary
        run: |
          cat << EOF >> "$GITHUB_STEP_SUMMARY"
          ## Images generated successfully!

          ### Download

          Download the result of this run from [this url](${{ steps.upload.outputs.artifact-url }}).

          ### Checksums
          \`\`\`
          $(cat distdir/checksums.txt)
          \`\`\`
          EOF

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          name: hrmpf ${{ needs.prepare.outputs.version }}
          body_path: release-body.txt
          preserve_order: true
          files: |
            distdir/*.iso
            distdir/*.torrent
